openapi: 3.0.3
info:
  title: PetShop - User
  description: PetShop - User
  version: 1.0.0
servers:
  - url: 'http://localhost:8888/api/petshop'
tags:
  - name: user
    description: Usuário
paths:
  /users/register:
    post:
      tags:
        - user
      summary: Create user
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '204':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'Invalid username/password supplied'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '409':
          description: 'Email or Document Number Already Exists'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /users/login:
    post:
      tags:
        - user
      summary: Login
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login (email)
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 'Invalid username/password supplied'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: 'Unauthorized access'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /user/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
components:
  schemas:
    UserRequest:
      type: object
      required: 
        - fullName
        - email
        - documentNumber
        - phoneNumber
        - password
        - userStatus
      properties:
        fullName:
          type: string
          minLength: 3
          example: "Rita Cristiane Jéssica da Rosa"
        email:
          type: string
          uniqueItems: true
          example: "rita.cristiane.darosa@grupomegavale.com.br"
        documentNumber:
          type: string
          uniqueItems: true
          example: "75596006629"
        phoneNumber:
          type: string
          pattern: "^\\+?[1-9]\\d{1,14}$"
          example: "66982667772"
        password:
          type: string
          minLength: 8
          example: "aWk!wA9xj5"
        userStatus:
          type: integer
          format: int32
          description: User Status
          example: 1
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName:
          type: string
          minLength: 3
          example: "Rita Cristiane Jéssica da Rosa"
        email:
          type: string
          uniqueItems: true
          example: "rita.cristiane.darosa@grupomegavale.com.br"
        documentNumber:
          type: string
          uniqueItems: true
          example: "75596006629"
        phoneNumber:
          type: string
          pattern: "^\\+?[1-9]\\d{1,14}$"
          example: "66982667772"
        userStatus:
          type: integer
          format: int32
          description: User Status
          example: 1
        dateRegister:
          type: string
          format: date-time
          example: "2024-02-29 15:15:20.726905"
    ApiResponse:
      type: object
      properties: 
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string